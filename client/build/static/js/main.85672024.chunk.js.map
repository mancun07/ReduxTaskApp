{"version":3,"sources":["actions/TaskActions.js","components/AddTaskModal.js","components/EditTaskModal.js","components/TechListModal.js","actions/TechActions.js","components/AddTechModal.js","components/ButtonSet.js","components/TaskItem.js","components/Preloader.js","components/TasksList.js","components/Navbar.js","reducers/TaskReducer.js","reducers/TechReducer.js","reducers/RootReducer.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["setCurrent","log","type","payload","connect","state","techs","tech","addTask","newLog","dispatch","a","fetch","method","body","JSON","stringify","headers","res","json","data","message","useState","setMessage","setTech","attention","setAttention","id","className","onSubmit","e","preventDefault","M","toast","html","value","onChange","target","htmlFor","name","disabled","map","t","firstName","lastName","_id","checked","current","task","updateTask","useEffect","getTechs","ok","Error","console","deleteTech","href","onClick","addTech","setFirstName","setLastName","trim","ButtonSet","AutoInit","deleteTask","format","date","Preloader","style","textAlign","margin","display","tasks","loading","getTasks","length","Navbar","width","initialState","err","LogReducer","action","filter","TechReducer","combineReducers","TaskReducer","middleware","thunk","store","createStore","RootReducer","composeWithDevTools","applyMiddleware","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85672024.chunk.js","sourcesContent":["export const getTasks = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"SET_LOADING\" });\r\n    const res = await fetch(\"/api/v1/logs\");\r\n    const data = await res.json();\r\n    dispatch({ type: \"GET_TASKS\", payload: data.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_ERRORS\", payload: err.message });\r\n  }\r\n};\r\n\r\n// export const searchTasks = (text) => async dispatch => {\r\n\r\n//         try {\r\n//             dispatch({type: 'SET_LOADING'})\r\n//             const res = await fetch(`/api/v1/logs?q=${text}`)\r\n//             const data = await res.json()\r\n\r\n//             dispatch({type: 'SEARCH_TASKS', payload: data.data})\r\n//         }\r\n\r\n//         catch (err) {\r\n//             dispatch({type: 'GET_ERRORS', payload: err.message})\r\n//         }\r\n// }\r\n\r\nexport const addTask = (newLog) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"SET_LOADING\" });\r\n    const res = await fetch(\"/api/v1/logs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newLog),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({ type: \"ADD_TASK\", payload: data.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_ERRORS\", payload: err.message });\r\n  }\r\n};\r\n\r\nexport const updateTask = (log) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"SET_LOADING\" });\r\n    const res = await fetch(`/api/v1/logs/${log._id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(log),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({ type: \"UPDATE_TASK\", payload: data.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_ERRORS\", payload: err.message });\r\n  }\r\n};\r\n\r\nexport const deleteTask = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"SET_LOADING\" });\r\n    await fetch(`/api/v1/logs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({ type: \"DELETE_TASK\", payload: id });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_ERRORS\", payload: err.message });\r\n  }\r\n};\r\n\r\n// export const setLoading = () => async dispatch => {\r\n//      dispatch({type: 'SET_LOADING'})\r\n\r\n// }\r\n\r\n// export const setLoading = () => {\r\n//     dispatch({type: SET_LOADING});\r\n//   };\r\n\r\nexport const setCurrent = (log) => {\r\n  return { type: \"SET_CURRENT\", payload: log };\r\n};\r\n","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addTask} from '../actions/TaskActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTaskModal = ({addTask, techs}) => {\r\n    const [message, setMessage] = useState('')\r\n    const [tech, setTech] = useState('')\r\n    const [attention, setAttention] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Первые два поля должны быть заполнены!'});\r\n        } else {\r\n            addTask({message, tech, attention})\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n            M.toast({ html: 'Задача успешно добавлена'});\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n    <div id=\"modal1\" className=\"modal\">\r\n        <form onSubmit={onSubmit}>\r\n        <div className=\"modal-content\">\r\n            <h4 className=\"center-align\">Выполненная задача</h4>\r\n            <div className=\"input-field col s6\">\r\n                <input id=\"log\" type=\"text\" value={message} className=\"validate\" onChange={e => setMessage(e.target.value)}/>\r\n                <label htmlFor=\"log\">Внесите задачу</label>\r\n            </div>\r\n\r\n            <select className=\"browser-default\" name=\"tech\" value={tech} onChange={e => setTech(e.target.value)}>\r\n                    <option value=\"\" disabled>Выберите сотрудника</option>\r\n                {techs !== null && techs.map(t => {\r\n                     return <option key={t._id} >{t.firstName} {t.lastName}</option>\r\n                    })}\r\n            </select>\r\n\r\n            <p>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={attention} onChange={e => setAttention(!attention)}/>\r\n                    <span>Требует проверки</span>\r\n                </label>\r\n            </p>\r\n\r\n        </div>\r\n \r\n\r\n        <div className=\"modal-footer\">\r\n            <input type=\"submit\" className=\"modal-close btn btn-flat green white-text\" value=\"Добавить\"/>\r\n        </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        techs: state.tech.techs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addTask})(AddTaskModal)\r\n","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTask, setCurrent} from '../actions/TaskActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst EditTaskModal = ({current, updateTask, techs}) => {\r\n    const [message, setMessage] = useState('')\r\n    const [tech, setTech] = useState('')\r\n    const [attention, setAttention] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n            setMessage(current.message);\r\n            setTech(current.tech);\r\n            setAttention(current.attention);\r\n        }\r\n      }, [current])  \r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Первые два поля должны быть заполнены! Попробуйте еще раз!'});\r\n        } else {\r\n            updateTask({\r\n                message, \r\n                tech,\r\n                attention,\r\n                _id: current._id\r\n            })\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n            M.toast({ html: 'Задача успешно обновлена!'});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n    <div id=\"editModal\" className=\"modal\">\r\n        <form onSubmit={onSubmit}>\r\n        <div className=\"modal-content\">\r\n            <h4 className=\"center-align\">Внести изменение</h4>\r\n            <div className=\"input-field col s6\">\r\n                <input id=\"log\" type=\"text\" value={message} className=\"validate\" onChange={e => setMessage(e.target.value)}/>\r\n            </div>\r\n\r\n            <select value={tech} onChange={e => setTech(e.target.value)}>\r\n            <option value=\"\" disabled>Выберите сотрудника</option>\r\n                {techs !== null && techs.map(t => {\r\n                     return <option key={t._id} >{t.firstName} {t.lastName}</option>\r\n                    })}\r\n            </select>\r\n\r\n            <p>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={attention} onChange={e => setAttention(!attention)}/>\r\n                    <span>Требует проверки</span>\r\n                </label>\r\n            </p>\r\n\r\n        </div>\r\n \r\n\r\n        <div className=\"modal-footer\">\r\n            <input type=\"submit\" className=\"modal-close btn btn-flat green white-text\" value=\"Обновить\"/>\r\n        </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        current: state.task.current,\r\n        techs: state.tech.techs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateTask, setCurrent})(EditTaskModal)\r\n","import React, {useEffect} from 'react';\r\nimport {deleteTech, getTechs} from '../actions/TechActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TechListModal = ({getTechs, deleteTech, techs}) => {\r\n\r\n    useEffect(() => {\r\n        getTechs();\r\n    }, [getTechs])\r\n\r\n    return (\r\n        <div id=\"techModal\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h4 className=\"center\">Сотрудники Отдела</h4>\r\n                <ul className=\"collection\">\r\n                    {techs && techs.map(tech => {\r\n                        return <li key={tech._id} className=\"collection-item\">{tech.firstName}{' '}{tech.lastName}\r\n                        <a href=\"#!\" className=\"secondary-content\"\r\n                        onClick={() => deleteTech(tech._id)}\r\n                        ><i className=\"material-icons\">delete</i></a>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        techs: state.tech.techs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getTechs, deleteTech} )(TechListModal)\r\n","\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n        const res = await fetch('/api/v1/techs');\r\n        if (!res.ok) {\r\n            throw Error ('Данные не доступны')\r\n        }\r\n        const data = await res.json();\r\n\r\n        dispatch({type: 'GET_TECHS', payload: data.data})\r\n    }\r\n\r\n    catch (err) {\r\n        dispatch({type: 'GET_TECHS_ERROR', payload: err.message})\r\n        console.log(err.message)\r\n    }\r\n}\r\n\r\nexport const addTech = (tech) => async dispatch => {\r\n    try {\r\n        const res = await fetch('/api/v1/techs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(tech),\r\n            headers: {'Content-Type': 'application/json'}\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({type: 'ADD_TECH', payload: data.data})\r\n    }\r\n\r\n    catch (err) {\r\n        dispatch({type: 'GET_TECHS_ERROR', payload: err.message})\r\n    }\r\n}\r\n\r\nexport const deleteTech = (id) => async dispatch => {\r\n    try {\r\n        await fetch(`/api/v1/techs/${id}`, {\r\n            method: 'DELETE'       \r\n        });\r\n\r\n        dispatch({type: 'DELETE_TECH', payload: id})\r\n    }\r\n\r\n    catch (err) {\r\n        dispatch({type: 'GET_TECHS_ERROR', payload: err.message})\r\n    }\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { addTech } from \"../actions/TechActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (firstName === \"\" || lastName === \"\") {\r\n      M.toast({ html: \"Первые два поля должны быть заполнены!\" });\r\n    } else {\r\n      addTech({ firstName, lastName });\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      M.toast({ html: \"Сотрудник успешно добавлен!\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"addTechModal\" className=\"modal\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"first_name\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value.trim())}\r\n              type=\"text\"\r\n            />\r\n            <label htmlFor=\"first_name\">Имя</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"last_name\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value.trim())}\r\n              type=\"text\"\r\n            />\r\n            <label htmlFor=\"last_name\">Фамилия</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"modal-close btn btn-flat green white-text\"\r\n            value=\"Добавить сотрудника\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React, {useEffect} from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst ButtonSet = () => {\r\n\r\n    useEffect(() => {\r\n        // Init Materialize JS\r\n        M.AutoInit();\r\n      })  \r\n\r\n    return (\r\n<div className=\"fixed-action-btn\">\r\n  <a href=\"#modal1\" className=\"btn-floating btn-large red modal-trigger\">\r\n    <i className=\"large material-icons\">add</i>\r\n  </a>\r\n  <ul>\r\n    <li><a href=\"#techModal\" className=\"btn-floating blue modal-trigger\"><i className=\"material-icons\">person</i></a></li>\r\n    <li><a href=\"#addTechModal\" className=\"btn-floating green modal-trigger\"><i className=\"material-icons\">person_add</i></a></li>\r\n  </ul>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default ButtonSet\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { deleteTask, setCurrent } from '../actions/TaskActions';\r\nimport {connect} from 'react-redux';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TaskItem = ({task, deleteTask, setCurrent}) => {\r\n\r\n\r\n    return (\r\n    <li className=\"collection-item\">\r\n        <div>\r\n            <a href=\"#editModal\" onClick={() => setCurrent(task)} className={`modal-trigger ${task.attention ? 'red-text' : ''}`}>{task.message}</a>\r\n            <br/>\r\n            <span> #<span className=\"grey-text\">последнее обновление сделано{' '}</span>{task.tech}, \r\n            <span className=\"grey-text\">{' '} {' '}\r\n            <Moment format='MMMM Do YYYY, h:mm a'>{log.date}</Moment></span>\r\n            </span>\r\n            <a href=\"#!\" className=\"secondary-content\" onClick={() => {\r\n            deleteTask(task._id)\r\n            M.toast({ html: 'Задача удалена!' });\r\n            }}><i className=\"material-icons\">delete</i></a>\r\n\r\n\r\n        </div>\r\n\r\n     \r\n       \r\n                     {/* <div>Alvin<a href=\"#!\" class=\"secondary-content\">\r\n                <i class=\"material-icons\">send</i></a> */}\r\n            {/* </div> */}\r\n             \r\n    </li>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default connect(null, {deleteTask, setCurrent})(TaskItem)\r\n","import React from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader-wrapper big active\" style={{textAlign: 'center', margin: '60px auto', display: 'block' }}>\r\n        <div className=\"spinner-layer spinner-blue-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React, {useEffect} from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { getTasks } from '../actions/TaskActions';\r\nimport Preloader from './Preloader';\r\n\r\nconst TasksList = ({tasks, getTasks, loading}) => {\r\n\r\n    useEffect(() => {\r\n        getTasks()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n   \r\n\r\n \r\n    return (\r\n        <div>\r\n            <ul className=\"collection with-header\">\r\n                <li className=\"collection-header center-align\"><h4>Выполненные задачи</h4></li>\r\n                {loading && <Preloader/>}\r\n                {!loading && tasks.length ? tasks.map(task => {\r\n                        return <TaskItem key={task._id} task={task}/>\r\n                    }) : (\r\n                        <p style={{textAlign:'center'}}>На текущий момент нет выполненных задач...</p>\r\n                    )\r\n                 } \r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.task.tasks,\r\n        loading: state.task.loading\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {getTasks})(TasksList)\r\n","import React from \"react\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper indigo\">\r\n        <div\r\n          className=\"brand-logo\"\r\n          style={{ width: \"100%\", textAlign: \"center\" }}\r\n        >\r\n          Task App\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const initialState = {\r\n  tasks: [],\r\n  loading: false,\r\n  current: null,\r\n  err: null,\r\n};\r\n\r\nconst LogReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TASKS\":\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case \"ADD_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload],\r\n        loading: false,\r\n      };\r\n\r\n    case \"DELETE_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((log) => {\r\n          return log._id !== action.payload;\r\n        }),\r\n        loading: false,\r\n      };\r\n\r\n    case \"UPDATE_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((log) => {\r\n          return log._id === action.payload._id ? action.payload : log;\r\n        }),\r\n        loading: false,\r\n      };\r\n\r\n    case \"SET_LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case \"SET_CURRENT\":\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default LogReducer;\r\n","const initialState = {\r\n    techs: [],\r\n    err: null\r\n}\r\n\r\nconst TechReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'GET_TECHS':\r\n        return {\r\n            ...state,\r\n            techs: action.payload\r\n        }\r\n\r\n        case 'ADD_TECH':\r\n        return {\r\n            ...state,\r\n            techs: [...state.techs, action.payload]\r\n        }\r\n\r\n        case 'DELETE_TECH':\r\n            return {\r\n                ...state,\r\n                techs: state.techs.filter(tech => {\r\n                    return tech._id !== action.payload\r\n                })\r\n            }\r\n\r\n        case 'GET_TECHS_ERROR':\r\n            return {\r\n                ...state,\r\n                err: action.payload\r\n            }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default TechReducer","import {combineReducers} from 'redux'\r\nimport TaskReducer from './TaskReducer'\r\nimport TechReducer from './TechReducer'\r\n\r\nexport default combineReducers({\r\n    task: TaskReducer,\r\n    tech: TechReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    RootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import AddTaskModal from \"./components/AddTaskModal\";\nimport EditTaskModal from \"./components/EditTaskModal\";\nimport TechListModal from \"./components/TechListModal\";\nimport AddTechModal from \"./components/AddTechModal\";\nimport ButtonSet from \"./components/ButtonSet\";\nimport TasksList from \"./components/TasksList\";\nimport Navbar from \"./components/Navbar\";\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n     <Navbar/>\n     <div className=\"container\">\n          <TasksList/>\n          <ButtonSet/>\n          <AddTaskModal/>\n          <EditTaskModal/>\n          <TechListModal/>\n          <AddTechModal/>\n     </div>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}